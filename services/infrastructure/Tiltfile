# Tiltfile Dev

# Load Kubernetes YAMLs
k8s_yaml('postgres-sc.yaml') 
k8s_yaml('postgres-pv.yaml') 
k8s_yaml('portfolio.secret.yaml')
k8s_yaml('postgres-pvc.yaml')
k8s_yaml('postgres.yaml')
k8s_yaml('server.yaml')
k8s_yaml('frontend-web.yaml')
# k8s_yaml('ingress.yaml')
k8s_yaml('caddy.service.yaml')
k8s_yaml('caddy.config-map.yaml')
k8s_yaml('prometheus.deployment.yaml')
k8s_yaml('grafana.yaml')
k8s_yaml('authorization.yaml')

# Define Docker build for the server
docker_build('gggfox/portfolio', '..', dockerfile='../Dockerfile.backend.dev',    ignore=['*/node_modules', '*/dist'],
# live_update=[
#         sync('./backend-api/src', '/portfolio-app/src'),  # Sync only backend API source
#         sync('./shared/src', '/portfolio-app/shared/src') # Sync shared files
    # ]
    )

#k8s_resource('frontend-web', port_forwards='8080:80', resource_deps=['deploy'])

# Define Docker build for the server
docker_build('gggfox/portfolio-web-frontend', '..', 
  #dockerfile='./../frontend-web/Dockerfile',  
  dockerfile='../Dockerfile.frontend.dev',
  ignore=['*/node_modules', '*/dist'],
  live_update=[
        fall_back_on(['./../frontend-web/package.json', './../frontend-web/package-lock.json']),
        sync('./../frontend-web/src', '/app/src'),
        #run('npm run dev -- --host 0.0.0.0')
  ]
)


# k8s_resource(new_name='ingress', objects=['ingress-service'], labels=["API"])

# Watch the server deployment and port forward
k8s_resource('server', port_forwards='30001:3000',labels=["API"])

# Watch the server deployment and port forward
k8s_resource('frontend-web', port_forwards='5173:5173', labels=["Client"])
k8s_resource('prometheus-deployment', port_forwards=9090, labels=["API"])
k8s_resource('grafana', port_forwards=3000, labels=["API"])

k8s_resource('postgres', labels=["API"])
